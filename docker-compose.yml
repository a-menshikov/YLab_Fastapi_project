version: '3.8'

services:

  database:
    image: postgres:15.1-alpine
    restart: always
    container_name: database
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ylab_pgdata:/var/lib/postgresql/data/
    env_file:
      - .env
    networks:
      - ylab_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - ylab_network
    volumes:
      - ylab_redis_data:/data
    expose:
      - "6379"
    ports:
      - "6379:6379"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    networks:
      - ylab_network
    volumes:
      - /mnt/e/DEV/admin:/code/app/admin
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:80"
    env_file:
      - .env

  # rabbitmq:
  #   image: rabbitmq:latest
  #   hostname: rabbitmq
  #   restart: always
  #   container_name: rabbitmq
  #   networks:
  #     - ylab_network
  #   volumes:
  #     - ylab_rabbit_data:/var/lib/rabbitmq
  #   env_file:
  #     - .env
  #   ports:
  #     - 5672:5672
  #   depends_on:
  #     - backend
  #   healthcheck:
  #     test: rabbitmq-diagnostics -q ping
  #     interval: 30s
  #     timeout: 30s
  #     retries: 3

  celery:
      build:
        context: .
        dockerfile: Dockerfile
      env_file:
        - .env
      container_name: celery
      restart: always
      volumes:
      - /mnt/e/DEV/admin:/code/app/admin
      networks:
        - ylab_network
      command: ["celery", "--app=app.tasks.tasks:celery", "worker", "-l", "INFO"]
      depends_on:
        - backend
        # rabbitmq:
        #   condition: service_healthy

networks:
  ylab_network:
    name: ylab_network
volumes:
  ylab_pgdata:
    name: ylab_pgdata
  ylab_redis_data:
    name: ylab_redis_data
  # ylab_rabbit_data:
  #   name: ylab_rabbit_data
